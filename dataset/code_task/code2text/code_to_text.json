[
    {"id":0,"repo":"etcd-io\/etcd","path":"clientv3\/concurrency\/stm.go","func_name":"NewSTM","original_string":"func NewSTM(c *v3.Client, apply func(STM) error, so ...stmOption) (*v3.TxnResponse, error) {\n\topts := &stmOptions{ctx: c.Ctx()}\n\tfor _, f := range so {\n\t\tf(opts)\n\t}\n\tif len(opts.prefetch) != 0 {\n\t\tf := apply\n\t\tapply = func(s STM) error {\n\t\t\ts.Get(opts.prefetch...)\n\t\t\treturn f(s)\n\t\t}\n\t}\n\treturn runSTM(mkSTM(c, opts), apply)\n}","language":"go","code":"func NewSTM(c *v3.Client, apply func(STM) error, so ...stmOption) (*v3.TxnResponse, error) {\n\topts := &stmOptions{ctx: c.Ctx()}\n\tfor _, f := range so {\n\t\tf(opts)\n\t}\n\tif len(opts.prefetch) != 0 {\n\t\tf := apply\n\t\tapply = func(s STM) error {\n\t\t\ts.Get(opts.prefetch...)\n\t\t\treturn f(s)\n\t\t}\n\t}\n\treturn runSTM(mkSTM(c, opts), apply)\n}","code_tokens":["func","NewSTM","(","c","*","v3",".","Client",",","apply","func","(","STM",")","error",",","so","...","stmOption",")","(","*","v3",".","TxnResponse",",","error",")","{","opts",":=","&","stmOptions","{","ctx",":","c",".","Ctx","(",")","}","\n","for","_",",","f",":=","range","so","{","f","(","opts",")","\n","}","\n","if","len","(","opts",".","prefetch",")","!=","0","{","f",":=","apply","\n","apply","=","func","(","s","STM",")","error","{","s",".","Get","(","opts",".","prefetch","...",")","\n","return","f","(","s",")","\n","}","\n","}","\n","return","runSTM","(","mkSTM","(","c",",","opts",")",",","apply",")","\n","}"],"docstring":"\/\/ NewSTM initiates a new STM instance, using serializable snapshot isolation by default.","docstring_tokens":["NewSTM","initiates","a","new","STM","instance","using","serializable","snapshot","isolation","by","default","."],"sha":"616592d9ba993e3fe9798eef581316016df98906","url":"https:\/\/github.com\/etcd-io\/etcd\/blob\/616592d9ba993e3fe9798eef581316016df98906\/clientv3\/concurrency\/stm.go#L89-L102"},
    {"id":1,"repo":"etcd-io\/etcd","path":"clientv3\/concurrency\/stm.go","func_name":"first","original_string":"func (rs readSet) first() int64 {\n\tret := int64(math.MaxInt64 - 1)\n\tfor _, resp := range rs {\n\t\tif rev := resp.Header.Revision; rev < ret {\n\t\t\tret = rev\n\t\t}\n\t}\n\treturn ret\n}","language":"go","code":"func (rs readSet) first() int64 {\n\tret := int64(math.MaxInt64 - 1)\n\tfor _, resp := range rs {\n\t\tif rev := resp.Header.Revision; rev < ret {\n\t\t\tret = rev\n\t\t}\n\t}\n\treturn ret\n}","code_tokens":["func","(","rs","readSet",")","first","(",")","int64","{","ret",":=","int64","(","math",".","MaxInt64","-","1",")","\n","for","_",",","resp",":=","range","rs","{","if","rev",":=","resp",".","Header",".","Revision",";","rev","<","ret","{","ret","=","rev","\n","}","\n","}","\n","return","ret","\n","}"],"docstring":"\/\/ first returns the store revision from the first fetch","docstring_tokens":["first","returns","the","store","revision","from","the","first","fetch"],"sha":"616592d9ba993e3fe9798eef581316016df98906","url":"https:\/\/github.com\/etcd-io\/etcd\/blob\/616592d9ba993e3fe9798eef581316016df98906\/clientv3\/concurrency\/stm.go#L197-L205"},
    {"id":2,"repo":"etcd-io\/etcd","path":"clientv3\/concurrency\/stm.go","func_name":"cmps","original_string":"func (ws writeSet) cmps(rev int64) []v3.Cmp {\n\tcmps := make([]v3.Cmp, 0, len(ws))\n\tfor key := range ws {\n\t\tcmps = append(cmps, v3.Compare(v3.ModRevision(key), \"<\", rev))\n\t}\n\treturn cmps\n}","language":"go","code":"func (ws writeSet) cmps(rev int64) []v3.Cmp {\n\tcmps := make([]v3.Cmp, 0, len(ws))\n\tfor key := range ws {\n\t\tcmps = append(cmps, v3.Compare(v3.ModRevision(key), \"<\", rev))\n\t}\n\treturn cmps\n}","code_tokens":["func","(","ws","writeSet",")","cmps","(","rev","int64",")","[","]","v3",".","Cmp","{","cmps",":=","make","(","[","]","v3",".","Cmp",",","0",",","len","(","ws",")",")","\n","for","key",":=","range","ws","{","cmps","=","append","(","cmps",",","v3",".","Compare","(","v3",".","ModRevision","(","key",")",",","\"","\"",",","rev",")",")","\n","}","\n","return","cmps","\n","}"],"docstring":"\/\/ cmps returns a cmp list testing no writes have happened past rev","docstring_tokens":["cmps","returns","a","cmp","list","testing","no","writes","have","happened","past","rev"],"sha":"616592d9ba993e3fe9798eef581316016df98906","url":"https:\/\/github.com\/etcd-io\/etcd\/blob\/616592d9ba993e3fe9798eef581316016df98906\/clientv3\/concurrency\/stm.go#L228-L234"},
    {"id":3,"repo":"ReactiveX\/RxJava","path":"src\/main\/java\/io\/reactivex\/internal\/observers\/QueueDrainObserver.java","func_name":"QueueDrainObserver.fastPathOrderedEmit","original_string":"protected final void fastPathOrderedEmit(U value, boolean delayError, Disposable disposable) {\n        final Observer<? super V> observer = downstream;\n        final SimplePlainQueue<U> q = queue;\n\n        if (wip.get() == 0 && wip.compareAndSet(0, 1)) {\n            if (q.isEmpty()) {\n                accept(observer, value);\n                if (leave(-1) == 0) {\n                    return;\n                }\n            } else {\n                q.offer(value);\n            }\n        } else {\n            q.offer(value);\n            if (!enter()) {\n                return;\n            }\n        }\n        QueueDrainHelper.drainLoop(q, observer, delayError, disposable, this);\n    }","language":"java","code":"protected final void fastPathOrderedEmit(U value, boolean delayError, Disposable disposable) {\n        final Observer<? super V> observer = downstream;\n        final SimplePlainQueue<U> q = queue;\n\n        if (wip.get() == 0 && wip.compareAndSet(0, 1)) {\n            if (q.isEmpty()) {\n                accept(observer, value);\n                if (leave(-1) == 0) {\n                    return;\n                }\n            } else {\n                q.offer(value);\n            }\n        } else {\n            q.offer(value);\n            if (!enter()) {\n                return;\n            }\n        }\n        QueueDrainHelper.drainLoop(q, observer, delayError, disposable, this);\n    }","code_tokens":["protected","final","void","fastPathOrderedEmit","(","U","value",",","boolean","delayError",",","Disposable","disposable",")","{","final","Observer","<","?","super","V",">","observer","=","downstream",";","final","SimplePlainQueue","<","U",">","q","=","queue",";","if","(","wip",".","get","(",")","==","0","&&","wip",".","compareAndSet","(","0",",","1",")",")","{","if","(","q",".","isEmpty","(",")",")","{","accept","(","observer",",","value",")",";","if","(","leave","(","-","1",")","==","0",")","{","return",";","}","}","else","{","q",".","offer","(","value",")",";","}","}","else","{","q",".","offer","(","value",")",";","if","(","!","enter","(",")",")","{","return",";","}","}","QueueDrainHelper",".","drainLoop","(","q",",","observer",",","delayError",",","disposable",",","this",")",";","}"],"docstring":"Makes sure the fast-path emits in order.\n@param value the value to emit or queue up\n@param delayError if true, errors are delayed until the source has terminated\n@param disposable the resource to dispose if the drain terminates","docstring_tokens":["Makes","sure","the","fast","-","path","emits","in","order","."],"sha":"ac84182aa2bd866b53e01c8e3fe99683b882c60e","url":"https:\/\/github.com\/ReactiveX\/RxJava\/blob\/ac84182aa2bd866b53e01c8e3fe99683b882c60e\/src\/main\/java\/io\/reactivex\/internal\/observers\/QueueDrainObserver.java#L88-L108"},
    {"id":4,"repo":"ReactiveX\/RxJava","path":"src\/main\/java\/io\/reactivex\/Observable.java","func_name":"Observable.wrap","original_string":"@CheckReturnValue\n    @SchedulerSupport(SchedulerSupport.NONE)\n    public static <T> Observable<T> wrap(ObservableSource<T> source) {\n        ObjectHelper.requireNonNull(source, \"source is null\");\n        if (source instanceof Observable) {\n            return RxJavaPlugins.onAssembly((Observable<T>)source);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromUnsafeSource<T>(source));\n    }","language":"java","code":"@CheckReturnValue\n    @SchedulerSupport(SchedulerSupport.NONE)\n    public static <T> Observable<T> wrap(ObservableSource<T> source) {\n        ObjectHelper.requireNonNull(source, \"source is null\");\n        if (source instanceof Observable) {\n            return RxJavaPlugins.onAssembly((Observable<T>)source);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromUnsafeSource<T>(source));\n    }","code_tokens":["@","CheckReturnValue","@","SchedulerSupport","(","SchedulerSupport",".","NONE",")","public","static","<","T",">","Observable","<","T",">","wrap","(","ObservableSource","<","T",">","source",")","{","ObjectHelper",".","requireNonNull","(","source",",","\"source is null\"",")",";","if","(","source","instanceof","Observable",")","{","return","RxJavaPlugins",".","onAssembly","(","(","Observable","<","T",">",")","source",")",";","}","return","RxJavaPlugins",".","onAssembly","(","new","ObservableFromUnsafeSource","<","T",">","(","source",")",")",";","}"],"docstring":"Wraps an ObservableSource into an Observable if not already an Observable.\n\n<dl>\n<dt><b>Scheduler:<\/b><\/dt>\n<dd>{@code wrap} does not operate by default on a particular {@link Scheduler}.<\/dd>\n<\/dl>\n\n@param <T> the value type\n@param source the source ObservableSource instance\n@return the new Observable instance or the same as the source\n@throws NullPointerException if source is null","docstring_tokens":["Wraps","an","ObservableSource","into","an","Observable","if","not","already","an","Observable","."],"sha":"ac84182aa2bd866b53e01c8e3fe99683b882c60e","url":"https:\/\/github.com\/ReactiveX\/RxJava\/blob\/ac84182aa2bd866b53e01c8e3fe99683b882c60e\/src\/main\/java\/io\/reactivex\/Observable.java#L4082-L4090"},
    {"id":5,"repo":"ReactiveX\/RxJava","path":"src\/main\/java\/io\/reactivex\/Observable.java","func_name":"Observable.sorted","original_string":"@CheckReturnValue\n    @SchedulerSupport(SchedulerSupport.NONE)\n    public final Observable<T> sorted(Comparator<? super T> sortFunction) {\n        ObjectHelper.requireNonNull(sortFunction, \"sortFunction is null\");\n        return toList().toObservable().map(Functions.listSorter(sortFunction)).flatMapIterable(Functions.<List<T>>identity());\n    }","language":"java","code":"@CheckReturnValue\n    @SchedulerSupport(SchedulerSupport.NONE)\n    public final Observable<T> sorted(Comparator<? super T> sortFunction) {\n        ObjectHelper.requireNonNull(sortFunction, \"sortFunction is null\");\n        return toList().toObservable().map(Functions.listSorter(sortFunction)).flatMapIterable(Functions.<List<T>>identity());\n    }","code_tokens":["@","CheckReturnValue","@","SchedulerSupport","(","SchedulerSupport",".","NONE",")","public","final","Observable","<","T",">","sorted","(","Comparator","<","?","super","T",">","sortFunction",")","{","ObjectHelper",".","requireNonNull","(","sortFunction",",","\"sortFunction is null\"",")",";","return","toList","(",")",".","toObservable","(",")",".","map","(","Functions",".","listSorter","(","sortFunction",")",")",".","flatMapIterable","(","Functions",".","<","List","<","T",">",">","identity","(",")",")",";","}"],"docstring":"Returns an Observable that emits the events emitted by source ObservableSource, in a\nsorted order based on a specified comparison function.\n\n<p>Note that calling {@code sorted} with long, non-terminating or infinite sources\nmight cause {@link OutOfMemoryError}\n\n<dl>\n<dt><b>Scheduler:<\/b><\/dt>\n<dd>{@code sorted} does not operate by default on a particular {@link Scheduler}.<\/dd>\n<\/dl>\n\n@param sortFunction\na function that compares two items emitted by the source ObservableSource and returns an Integer\nthat indicates their sort order\n@return an Observable that emits the items emitted by the source ObservableSource in sorted order","docstring_tokens":["Returns","an","Observable","that","emits","the","events","emitted","by","source","ObservableSource","in","a","sorted","order","based","on","a","specified","comparison","function","."],"sha":"ac84182aa2bd866b53e01c8e3fe99683b882c60e","url":"https:\/\/github.com\/ReactiveX\/RxJava\/blob\/ac84182aa2bd866b53e01c8e3fe99683b882c60e\/src\/main\/java\/io\/reactivex\/Observable.java#L12008-L12013"},
    {"id":6,"repo":"axios\/axios","path":"lib\/axios.js","func_name":"createInstance","original_string":"function createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  \/\/ Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  \/\/ Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}","language":"javascript","code":"function createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  \/\/ Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  \/\/ Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}","code_tokens":["function","createInstance","(","defaultConfig",")","{","var","context","=","new","Axios","(","defaultConfig",")",";","var","instance","=","bind","(","Axios",".","prototype",".","request",",","context",")",";","\/\/ Copy axios.prototype to instance","utils",".","extend","(","instance",",","Axios",".","prototype",",","context",")",";","\/\/ Copy context to instance","utils",".","extend","(","instance",",","context",")",";","return","instance",";","}"],"docstring":"Create an instance of Axios\n\n@param {Object} defaultConfig The default config for the instance\n@return {Axios} A new instance of Axios","docstring_tokens":["Create","an","instance","of","Axios"],"sha":"92d231387fe2092f8736bc1746d4caa766b675f5","url":"https:\/\/github.com\/axios\/axios\/blob\/92d231387fe2092f8736bc1746d4caa766b675f5\/lib\/axios.js#L15-L26"},
    {"id":7,"repo":"axios\/axios","path":"lib\/cancel\/CancelToken.js","func_name":"CancelToken","original_string":"function CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      \/\/ Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}","language":"javascript","code":"function CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      \/\/ Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}","code_tokens":["function","CancelToken","(","executor",")","{","if","(","typeof","executor","!==","'function'",")","{","throw","new","TypeError","(","'executor must be a function.'",")",";","}","var","resolvePromise",";","this",".","promise","=","new","Promise","(","function","promiseExecutor","(","resolve",")","{","resolvePromise","=","resolve",";","}",")",";","var","token","=","this",";","executor","(","function","cancel","(","message",")","{","if","(","token",".","reason",")","{","\/\/ Cancellation has already been requested","return",";","}","token",".","reason","=","new","Cancel","(","message",")",";","resolvePromise","(","token",".","reason",")",";","}",")",";","}"],"docstring":"A `CancelToken` is an object that can be used to request cancellation of an operation.\n\n@class\n@param {Function} executor The executor function.","docstring_tokens":["A","CancelToken","is","an","object","that","can","be","used","to","request","cancellation","of","an","operation","."],"sha":"92d231387fe2092f8736bc1746d4caa766b675f5","url":"https:\/\/github.com\/axios\/axios\/blob\/92d231387fe2092f8736bc1746d4caa766b675f5\/lib\/cancel\/CancelToken.js#L11-L31"},
    {"id":8,"repo":"axios\/axios","path":"lib\/utils.js","func_name":"isArrayBufferView","original_string":"function isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}","language":"javascript","code":"function isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}","code_tokens":["function","isArrayBufferView","(","val",")","{","var","result",";","if","(","(","typeof","ArrayBuffer","!==","'undefined'",")","&&","(","ArrayBuffer",".","isView",")",")","{","result","=","ArrayBuffer",".","isView","(","val",")",";","}","else","{","result","=","(","val",")","&&","(","val",".","buffer",")","&&","(","val",".","buffer","instanceof","ArrayBuffer",")",";","}","return","result",";","}"],"docstring":"Determine if a value is a view on an ArrayBuffer\n\n@param {Object} val The value to test\n@returns {boolean} True if value is a view on an ArrayBuffer, otherwise false","docstring_tokens":["Determine","if","a","value","is","a","view","on","an","ArrayBuffer"],"sha":"92d231387fe2092f8736bc1746d4caa766b675f5","url":"https:\/\/github.com\/axios\/axios\/blob\/92d231387fe2092f8736bc1746d4caa766b675f5\/lib\/utils.js#L48-L56"},
    {"id":9,"repo":"the-control-group\/voyager","path":"src\/Commands\/AdminCommand.php","func_name":"AdminCommand.getAdministratorRole","original_string":"protected function getAdministratorRole()\n    {\n        $role = Voyager::model('Role')->firstOrNew([\n            'name' => 'admin',\n        ]);\n\n        if (!$role->exists) {\n            $role->fill([\n                'display_name' => 'Administrator',\n            ])->save();\n        }\n\n        return $role;\n    }","language":"php","code":"protected function getAdministratorRole()\n    {\n        $role = Voyager::model('Role')->firstOrNew([\n            'name' => 'admin',\n        ]);\n\n        if (!$role->exists) {\n            $role->fill([\n                'display_name' => 'Administrator',\n            ])->save();\n        }\n\n        return $role;\n    }","code_tokens":["protected","function","getAdministratorRole","(",")","{","$","role","=","Voyager","::","model","(","'Role'",")","->","firstOrNew","(","[","'name'","=>","'admin'",",","]",")",";","if","(","!","$","role","->","exists",")","{","$","role","->","fill","(","[","'display_name'","=>","'Administrator'",",","]",")","->","save","(",")",";","}","return","$","role",";","}"],"docstring":"Get the administrator role, create it if it does not exists.\n\n@return mixed","docstring_tokens":["Get","the","administrator","role","create","it","if","it","does","not","exists","."],"sha":"5315b63a5d17c7de877019ac53bec5bd7fd8e12c","url":"https:\/\/github.com\/the-control-group\/voyager\/blob\/5315b63a5d17c7de877019ac53bec5bd7fd8e12c\/src\/Commands\/AdminCommand.php#L93-L106"},
    {"id":10,"repo":"the-control-group\/voyager","path":"src\/Commands\/AdminCommand.php","func_name":"AdminCommand.getUser","original_string":"protected function getUser($create = false)\n    {\n        $email = $this->argument('email');\n\n        $model = config('voyager.user.namespace') ?: config('auth.providers.users.model');\n\n        \/\/ If we need to create a new user go ahead and create it\n        if ($create) {\n            $name = $this->ask('Enter the admin name');\n            $password = $this->secret('Enter admin password');\n            $confirmPassword = $this->secret('Confirm Password');\n\n            \/\/ Ask for email if there wasnt set one\n            if (!$email) {\n                $email = $this->ask('Enter the admin email');\n            }\n\n            \/\/ Passwords don't match\n            if ($password != $confirmPassword) {\n                $this->info(\"Passwords don't match\");\n\n                return;\n            }\n\n            $this->info('Creating admin account');\n\n            return $model::create([\n                'name'     => $name,\n                'email'    => $email,\n                'password' => Hash::make($password),\n            ]);\n        }\n\n        return $model::where('email', $email)->firstOrFail();\n    }","language":"php","code":"protected function getUser($create = false)\n    {\n        $email = $this->argument('email');\n\n        $model = config('voyager.user.namespace') ?: config('auth.providers.users.model');\n\n        \/\/ If we need to create a new user go ahead and create it\n        if ($create) {\n            $name = $this->ask('Enter the admin name');\n            $password = $this->secret('Enter admin password');\n            $confirmPassword = $this->secret('Confirm Password');\n\n            \/\/ Ask for email if there wasnt set one\n            if (!$email) {\n                $email = $this->ask('Enter the admin email');\n            }\n\n            \/\/ Passwords don't match\n            if ($password != $confirmPassword) {\n                $this->info(\"Passwords don't match\");\n\n                return;\n            }\n\n            $this->info('Creating admin account');\n\n            return $model::create([\n                'name'     => $name,\n                'email'    => $email,\n                'password' => Hash::make($password),\n            ]);\n        }\n\n        return $model::where('email', $email)->firstOrFail();\n    }","code_tokens":["protected","function","getUser","(","$","create","=","false",")","{","$","email","=","$","this","->","argument","(","'email'",")",";","$","model","=","config","(","'voyager.user.namespace'",")","?",":","config","(","'auth.providers.users.model'",")",";","\/\/ If we need to create a new user go ahead and create it","if","(","$","create",")","{","$","name","=","$","this","->","ask","(","'Enter the admin name'",")",";","$","password","=","$","this","->","secret","(","'Enter admin password'",")",";","$","confirmPassword","=","$","this","->","secret","(","'Confirm Password'",")",";","\/\/ Ask for email if there wasnt set one","if","(","!","$","email",")","{","$","email","=","$","this","->","ask","(","'Enter the admin email'",")",";","}","\/\/ Passwords don't match","if","(","$","password","!=","$","confirmPassword",")","{","$","this","->","info","(","\"Passwords don't match\"",")",";","return",";","}","$","this","->","info","(","'Creating admin account'",")",";","return","$","model","::","create","(","[","'name'","=>","$","name",",","'email'","=>","$","email",",","'password'","=>","Hash","::","make","(","$","password",")",",","]",")",";","}","return","$","model","::","where","(","'email'",",","$","email",")","->","firstOrFail","(",")",";","}"],"docstring":"Get or create user.\n\n@param bool $create\n\n@return \\App\\User","docstring_tokens":["Get","or","create","user","."],"sha":"5315b63a5d17c7de877019ac53bec5bd7fd8e12c","url":"https:\/\/github.com\/the-control-group\/voyager\/blob\/5315b63a5d17c7de877019ac53bec5bd7fd8e12c\/src\/Commands\/AdminCommand.php#L115-L149"},
    {"id":11,"repo":"the-control-group\/voyager","path":"src\/Listeners\/DeleteBreadMenuItem.php","func_name":"DeleteBreadMenuItem.handle","original_string":"public function handle(BreadDeleted $bread)\n    {\n        if (config('voyager.bread.add_menu_item')) {\n            $menuItem = Voyager::model('MenuItem')->where('route', 'voyager.'.$bread->dataType->slug.'.index');\n\n            if ($menuItem->exists()) {\n                $menuItem->delete();\n            }\n        }\n    }","language":"php","code":"public function handle(BreadDeleted $bread)\n    {\n        if (config('voyager.bread.add_menu_item')) {\n            $menuItem = Voyager::model('MenuItem')->where('route', 'voyager.'.$bread->dataType->slug.'.index');\n\n            if ($menuItem->exists()) {\n                $menuItem->delete();\n            }\n        }\n    }","code_tokens":["public","function","handle","(","BreadDeleted","$","bread",")","{","if","(","config","(","'voyager.bread.add_menu_item'",")",")","{","$","menuItem","=","Voyager","::","model","(","'MenuItem'",")","->","where","(","'route'",",","'voyager.'",".","$","bread","->","dataType","->","slug",".","'.index'",")",";","if","(","$","menuItem","->","exists","(",")",")","{","$","menuItem","->","delete","(",")",";","}","}","}"],"docstring":"Delete a MenuItem for a given BREAD.\n\n@param BreadDeleted $bread\n\n@return void","docstring_tokens":["Delete","a","MenuItem","for","a","given","BREAD","."],"sha":"5315b63a5d17c7de877019ac53bec5bd7fd8e12c","url":"https:\/\/github.com\/the-control-group\/voyager\/blob\/5315b63a5d17c7de877019ac53bec5bd7fd8e12c\/src\/Listeners\/DeleteBreadMenuItem.php#L27-L36"},
    {"id":12,"repo":"soimort\/you-get","path":"src\/you_get\/extractors\/miomio.py","func_name":"sina_xml_to_url_list","original_string":"def sina_xml_to_url_list(xml_data):\n    \"\"\"str->list\n    Convert XML to URL List.\n    From Biligrab.\n    \"\"\"\n    rawurl = []\n    dom = parseString(xml_data)\n    for node in dom.getElementsByTagName('durl'):\n        url = node.getElementsByTagName('url')[0]\n        rawurl.append(url.childNodes[0].data)\n    return rawurl","language":"python","code":"def sina_xml_to_url_list(xml_data):\n    \"\"\"str->list\n    Convert XML to URL List.\n    From Biligrab.\n    \"\"\"\n    rawurl = []\n    dom = parseString(xml_data)\n    for node in dom.getElementsByTagName('durl'):\n        url = node.getElementsByTagName('url')[0]\n        rawurl.append(url.childNodes[0].data)\n    return rawurl","code_tokens":["def","sina_xml_to_url_list","(","xml_data",")",":","rawurl","=","[","]","dom","=","parseString","(","xml_data",")","for","node","in","dom",".","getElementsByTagName","(","'durl'",")",":","url","=","node",".","getElementsByTagName","(","'url'",")","[","0","]","rawurl",".","append","(","url",".","childNodes","[","0","]",".","data",")","return","rawurl"],"docstring":"str->list\n    Convert XML to URL List.\n    From Biligrab.","docstring_tokens":["str","-",">","list","Convert","XML","to","URL","List",".","From","Biligrab","."],"sha":"b746ac01c9f39de94cac2d56f665285b0523b974","url":"https:\/\/github.com\/soimort\/you-get\/blob\/b746ac01c9f39de94cac2d56f665285b0523b974\/src\/you_get\/extractors\/miomio.py#L41-L51"},
    {"id":13,"repo":"soimort\/you-get","path":"src\/you_get\/extractors\/dailymotion.py","func_name":"dailymotion_download","original_string":"def dailymotion_download(url, output_dir='.', merge=True, info_only=False, **kwargs):\n    \"\"\"Downloads Dailymotion videos by URL.\n    \"\"\"\n\n    html = get_content(rebuilt_url(url))\n    info = json.loads(match1(html, r'qualities\":({.+?}),\"'))\n    title = match1(html, r'\"video_title\"\\s*:\\s*\"([^\"]+)\"') or \\\n            match1(html, r'\"title\"\\s*:\\s*\"([^\"]+)\"')\n    title = unicodize(title)\n\n    for quality in ['1080','720','480','380','240','144','auto']:\n        try:\n            real_url = info[quality][1][\"url\"]\n            if real_url:\n                break\n        except KeyError:\n            pass\n\n    mime, ext, size = url_info(real_url)\n\n    print_info(site_info, title, mime, size)\n    if not info_only:\n        download_urls([real_url], title, ext, size, output_dir=output_dir, merge=merge)","language":"python","code":"def dailymotion_download(url, output_dir='.', merge=True, info_only=False, **kwargs):\n    \"\"\"Downloads Dailymotion videos by URL.\n    \"\"\"\n\n    html = get_content(rebuilt_url(url))\n    info = json.loads(match1(html, r'qualities\":({.+?}),\"'))\n    title = match1(html, r'\"video_title\"\\s*:\\s*\"([^\"]+)\"') or \\\n            match1(html, r'\"title\"\\s*:\\s*\"([^\"]+)\"')\n    title = unicodize(title)\n\n    for quality in ['1080','720','480','380','240','144','auto']:\n        try:\n            real_url = info[quality][1][\"url\"]\n            if real_url:\n                break\n        except KeyError:\n            pass\n\n    mime, ext, size = url_info(real_url)\n\n    print_info(site_info, title, mime, size)\n    if not info_only:\n        download_urls([real_url], title, ext, size, output_dir=output_dir, merge=merge)","code_tokens":["def","dailymotion_download","(","url",",","output_dir","=","'.'",",","merge","=","True",",","info_only","=","False",",","*","*","kwargs",")",":","html","=","get_content","(","rebuilt_url","(","url",")",")","info","=","json",".","loads","(","match1","(","html",",","r'qualities\":({.+?}),\"'",")",")","title","=","match1","(","html",",","r'\"video_title\"\\s*:\\s*\"([^\"]+)\"'",")","or","match1","(","html",",","r'\"title\"\\s*:\\s*\"([^\"]+)\"'",")","title","=","unicodize","(","title",")","for","quality","in","[","'1080'",",","'720'",",","'480'",",","'380'",",","'240'",",","'144'",",","'auto'","]",":","try",":","real_url","=","info","[","quality","]","[","1","]","[","\"url\"","]","if","real_url",":","break","except","KeyError",":","pass","mime",",","ext",",","size","=","url_info","(","real_url",")","print_info","(","site_info",",","title",",","mime",",","size",")","if","not","info_only",":","download_urls","(","[","real_url","]",",","title",",","ext",",","size",",","output_dir","=","output_dir",",","merge","=","merge",")"],"docstring":"Downloads Dailymotion videos by URL.","docstring_tokens":["Downloads","Dailymotion","videos","by","URL","."],"sha":"b746ac01c9f39de94cac2d56f665285b0523b974","url":"https:\/\/github.com\/soimort\/you-get\/blob\/b746ac01c9f39de94cac2d56f665285b0523b974\/src\/you_get\/extractors\/dailymotion.py#L13-L35"},
    {"id":14,"repo":"soimort\/you-get","path":"src\/you_get\/extractors\/sina.py","func_name":"sina_download","original_string":"def sina_download(url, output_dir='.', merge=True, info_only=False, **kwargs):\n    \"\"\"Downloads Sina videos by URL.\n    \"\"\"\n    if 'news.sina.com.cn\/zxt' in url:\n        sina_zxt(url, output_dir=output_dir, merge=merge, info_only=info_only, **kwargs)\n        return\n\n    vid = match1(url, r'vid=(\\d+)')\n    if vid is None:\n        video_page = get_content(url)\n        vid = hd_vid = match1(video_page, r'hd_vid\\s*:\\s*\\'([^\\']+)\\'')\n        if hd_vid == '0':\n            vids = match1(video_page, r'[^\\w]vid\\s*:\\s*\\'([^\\']+)\\'').split('|')\n            vid = vids[-1]\n\n    if vid is None:\n        vid = match1(video_page, r'vid:\"?(\\d+)\"?')\n    if vid:\n        #title = match1(video_page, r'title\\s*:\\s*\\'([^\\']+)\\'')\n        sina_download_by_vid(vid, output_dir=output_dir, merge=merge, info_only=info_only)\n    else:\n        vkey = match1(video_page, r'vkey\\s*:\\s*\"([^\"]+)\"')\n        if vkey is None:\n            vid = match1(url, r'#(\\d+)')\n            sina_download_by_vid(vid, output_dir=output_dir, merge=merge, info_only=info_only)\n            return\n        title = match1(video_page, r'title\\s*:\\s*\"([^\"]+)\"')\n        sina_download_by_vkey(vkey, title=title, output_dir=output_dir, merge=merge, info_only=info_only)","language":"python","code":"def sina_download(url, output_dir='.', merge=True, info_only=False, **kwargs):\n    \"\"\"Downloads Sina videos by URL.\n    \"\"\"\n    if 'news.sina.com.cn\/zxt' in url:\n        sina_zxt(url, output_dir=output_dir, merge=merge, info_only=info_only, **kwargs)\n        return\n\n    vid = match1(url, r'vid=(\\d+)')\n    if vid is None:\n        video_page = get_content(url)\n        vid = hd_vid = match1(video_page, r'hd_vid\\s*:\\s*\\'([^\\']+)\\'')\n        if hd_vid == '0':\n            vids = match1(video_page, r'[^\\w]vid\\s*:\\s*\\'([^\\']+)\\'').split('|')\n            vid = vids[-1]\n\n    if vid is None:\n        vid = match1(video_page, r'vid:\"?(\\d+)\"?')\n    if vid:\n        #title = match1(video_page, r'title\\s*:\\s*\\'([^\\']+)\\'')\n        sina_download_by_vid(vid, output_dir=output_dir, merge=merge, info_only=info_only)\n    else:\n        vkey = match1(video_page, r'vkey\\s*:\\s*\"([^\"]+)\"')\n        if vkey is None:\n            vid = match1(url, r'#(\\d+)')\n            sina_download_by_vid(vid, output_dir=output_dir, merge=merge, info_only=info_only)\n            return\n        title = match1(video_page, r'title\\s*:\\s*\"([^\"]+)\"')\n        sina_download_by_vkey(vkey, title=title, output_dir=output_dir, merge=merge, info_only=info_only)","code_tokens":["def","sina_download","(","url",",","output_dir","=","'.'",",","merge","=","True",",","info_only","=","False",",","*","*","kwargs",")",":","if","'news.sina.com.cn\/zxt'","in","url",":","sina_zxt","(","url",",","output_dir","=","output_dir",",","merge","=","merge",",","info_only","=","info_only",",","*","*","kwargs",")","return","vid","=","match1","(","url",",","r'vid=(\\d+)'",")","if","vid","is","None",":","video_page","=","get_content","(","url",")","vid","=","hd_vid","=","match1","(","video_page",",","r'hd_vid\\s*:\\s*\\'([^\\']+)\\''",")","if","hd_vid","==","'0'",":","vids","=","match1","(","video_page",",","r'[^\\w]vid\\s*:\\s*\\'([^\\']+)\\''",")",".","split","(","'|'",")","vid","=","vids","[","-","1","]","if","vid","is","None",":","vid","=","match1","(","video_page",",","r'vid:\"?(\\d+)\"?'",")","if","vid",":","#title = match1(video_page, r'title\\s*:\\s*\\'([^\\']+)\\'')","sina_download_by_vid","(","vid",",","output_dir","=","output_dir",",","merge","=","merge",",","info_only","=","info_only",")","else",":","vkey","=","match1","(","video_page",",","r'vkey\\s*:\\s*\"([^\"]+)\"'",")","if","vkey","is","None",":","vid","=","match1","(","url",",","r'#(\\d+)'",")","sina_download_by_vid","(","vid",",","output_dir","=","output_dir",",","merge","=","merge",",","info_only","=","info_only",")","return","title","=","match1","(","video_page",",","r'title\\s*:\\s*\"([^\"]+)\"'",")","sina_download_by_vkey","(","vkey",",","title","=","title",",","output_dir","=","output_dir",",","merge","=","merge",",","info_only","=","info_only",")"],"docstring":"Downloads Sina videos by URL.","docstring_tokens":["Downloads","Sina","videos","by","URL","."],"sha":"b746ac01c9f39de94cac2d56f665285b0523b974","url":"https:\/\/github.com\/soimort\/you-get\/blob\/b746ac01c9f39de94cac2d56f665285b0523b974\/src\/you_get\/extractors\/sina.py#L94-L121"},
    {"id":15,"repo":"soimort\/you-get","path":"src\/you_get\/util\/log.py","func_name":"sprint","original_string":"def sprint(text, *colors):\n    \"\"\"Format text with color or other effects into ANSI escaped string.\"\"\"\n    return \"\\33[{}m{content}\\33[{}m\".format(\";\".join([str(color) for color in colors]), RESET, content=text) if IS_ANSI_TERMINAL and colors else text","language":"python","code":"def sprint(text, *colors):\n    \"\"\"Format text with color or other effects into ANSI escaped string.\"\"\"\n    return \"\\33[{}m{content}\\33[{}m\".format(\";\".join([str(color) for color in colors]), RESET, content=text) if IS_ANSI_TERMINAL and colors else text","code_tokens":["def","sprint","(","text",",","*","colors",")",":","return","\"\\33[{}m{content}\\33[{}m\"",".","format","(","\";\"",".","join","(","[","str","(","color",")","for","color","in","colors","]",")",",","RESET",",","content","=","text",")","if","IS_ANSI_TERMINAL","and","colors","else","text"],"docstring":"Format text with color or other effects into ANSI escaped string.","docstring_tokens":["Format","text","with","color","or","other","effects","into","ANSI","escaped","string","."],"sha":"b746ac01c9f39de94cac2d56f665285b0523b974","url":"https:\/\/github.com\/soimort\/you-get\/blob\/b746ac01c9f39de94cac2d56f665285b0523b974\/src\/you_get\/util\/log.py#L60-L62"},
    {"id":16,"repo":"soimort\/you-get","path":"src\/you_get\/util\/log.py","func_name":"print_log","original_string":"def print_log(text, *colors):\n    \"\"\"Print a log message to standard error.\"\"\"\n    sys.stderr.write(sprint(\"{}: {}\".format(script_name, text), *colors) + \"\\n\")","language":"python","code":"def print_log(text, *colors):\n    \"\"\"Print a log message to standard error.\"\"\"\n    sys.stderr.write(sprint(\"{}: {}\".format(script_name, text), *colors) + \"\\n\")","code_tokens":["def","print_log","(","text",",","*","colors",")",":","sys",".","stderr",".","write","(","sprint","(","\"{}: {}\"",".","format","(","script_name",",","text",")",",","*","colors",")","+","\"\\n\"",")"],"docstring":"Print a log message to standard error.","docstring_tokens":["Print","a","log","message","to","standard","error","."],"sha":"b746ac01c9f39de94cac2d56f665285b0523b974","url":"https:\/\/github.com\/soimort\/you-get\/blob\/b746ac01c9f39de94cac2d56f665285b0523b974\/src\/you_get\/util\/log.py#L72-L74"},
    {"id":17,"repo":"Shopify\/kubernetes-deploy","path":"lib\/kubernetes-deploy\/deferred_summary_logging.rb","func_name":"KubernetesDeploy.DeferredSummaryLogging.print_summary","original_string":"def print_summary(status)\n      status_string = status.to_s.humanize.upcase\n      if status == :success\n        heading(\"Result: \", status_string, :green)\n        level = :info\n      elsif status == :timed_out\n        heading(\"Result: \", status_string, :yellow)\n        level = :fatal\n      else\n        heading(\"Result: \", status_string, :red)\n        level = :fatal\n      end\n\n      if (actions_sentence = summary.actions_sentence.presence)\n        public_send(level, actions_sentence)\n        blank_line(level)\n      end\n\n      summary.paragraphs.each do |para|\n        msg_lines = para.split(\"\\n\")\n        msg_lines.each { |line| public_send(level, line) }\n        blank_line(level) unless para == summary.paragraphs.last\n      end\n    end","language":"ruby","code":"def print_summary(status)\n      status_string = status.to_s.humanize.upcase\n      if status == :success\n        heading(\"Result: \", status_string, :green)\n        level = :info\n      elsif status == :timed_out\n        heading(\"Result: \", status_string, :yellow)\n        level = :fatal\n      else\n        heading(\"Result: \", status_string, :red)\n        level = :fatal\n      end\n\n      if (actions_sentence = summary.actions_sentence.presence)\n        public_send(level, actions_sentence)\n        blank_line(level)\n      end\n\n      summary.paragraphs.each do |para|\n        msg_lines = para.split(\"\\n\")\n        msg_lines.each { |line| public_send(level, line) }\n        blank_line(level) unless para == summary.paragraphs.last\n      end\n    end","code_tokens":["def","print_summary","(","status",")","status_string","=","status",".","to_s",".","humanize",".","upcase","if","status","==",":success","heading","(","\"Result: \"",",","status_string",",",":green",")","level","=",":info","elsif","status","==",":timed_out","heading","(","\"Result: \"",",","status_string",",",":yellow",")","level","=",":fatal","else","heading","(","\"Result: \"",",","status_string",",",":red",")","level","=",":fatal","end","if","(","actions_sentence","=","summary",".","actions_sentence",".","presence",")","public_send","(","level",",","actions_sentence",")","blank_line","(","level",")","end","summary",".","paragraphs",".","each","do","|","para","|","msg_lines","=","para",".","split","(","\"\\n\"",")","msg_lines",".","each","{","|","line","|","public_send","(","level",",","line",")","}","blank_line","(","level",")","unless","para","==","summary",".","paragraphs",".","last","end","end"],"docstring":"Outputs the deferred summary information saved via @logger.summary.add_action and @logger.summary.add_paragraph","docstring_tokens":["Outputs","the","deferred","summary","information","saved","via"],"sha":"ab599ee9a4c1268d5a538a622a83160223fd916c","url":"https:\/\/github.com\/Shopify\/kubernetes-deploy\/blob\/ab599ee9a4c1268d5a538a622a83160223fd916c\/lib\/kubernetes-deploy\/deferred_summary_logging.rb#L37-L60"},
    {"id":18,"repo":"Shopify\/kubernetes-deploy","path":"lib\/kubernetes-deploy\/deploy_task.rb","func_name":"KubernetesDeploy.DeployTask.find_bad_files_from_kubectl_output","original_string":"def find_bad_files_from_kubectl_output(line)\n      # stderr often contains one or more lines like the following, from which we can extract the file path(s):\n      # Error from server (TypeOfError): error when creating \"\/path\/to\/service-gqq5oh.yml\": Service \"web\" is invalid:\n\n      line.scan(%r{\"(\/\\S+\\.ya?ml\\S*)\"}).each_with_object([]) do |matches, bad_files|\n        matches.each do |path|\n          content = File.read(path) if File.file?(path)\n          bad_files << { filename: File.basename(path), err: line, content: content }\n        end\n      end\n    end","language":"ruby","code":"def find_bad_files_from_kubectl_output(line)\n      # stderr often contains one or more lines like the following, from which we can extract the file path(s):\n      # Error from server (TypeOfError): error when creating \"\/path\/to\/service-gqq5oh.yml\": Service \"web\" is invalid:\n\n      line.scan(%r{\"(\/\\S+\\.ya?ml\\S*)\"}).each_with_object([]) do |matches, bad_files|\n        matches.each do |path|\n          content = File.read(path) if File.file?(path)\n          bad_files << { filename: File.basename(path), err: line, content: content }\n        end\n      end\n    end","code_tokens":["def","find_bad_files_from_kubectl_output","(","line",")","# stderr often contains one or more lines like the following, from which we can extract the file path(s):","# Error from server (TypeOfError): error when creating \"\/path\/to\/service-gqq5oh.yml\": Service \"web\" is invalid:","line",".","scan","(","%r{","\\S","\\.","\\S","}",")",".","each_with_object","(","[","]",")","do","|","matches",",","bad_files","|","matches",".","each","do","|","path","|","content","=","File",".","read","(","path",")","if","File",".","file?","(","path",")","bad_files","<<","{","filename",":","File",".","basename","(","path",")",",","err",":","line",",","content",":","content","}","end","end","end"],"docstring":"Inspect the file referenced in the kubectl stderr\n to make it easier for developer to understand what's going on","docstring_tokens":["Inspect","the","file","referenced","in","the","kubectl","stderr","to","make","it","easier","for","developer","to","understand","what","s","going","on"],"sha":"ab599ee9a4c1268d5a538a622a83160223fd916c","url":"https:\/\/github.com\/Shopify\/kubernetes-deploy\/blob\/ab599ee9a4c1268d5a538a622a83160223fd916c\/lib\/kubernetes-deploy\/deploy_task.rb#L514-L524"},
    {"id":19,"repo":"Shopify\/kubernetes-deploy","path":"lib\/kubernetes-deploy\/deploy_task.rb","func_name":"KubernetesDeploy.DeployTask.confirm_ejson_keys_not_prunable","original_string":"def confirm_ejson_keys_not_prunable\n      secret = ejson_provisioner.ejson_keys_secret\n      return unless secret.dig(\"metadata\", \"annotations\", KubernetesResource::LAST_APPLIED_ANNOTATION)\n\n      @logger.error(\"Deploy cannot proceed because protected resource \" \\\n        \"Secret\/#{EjsonSecretProvisioner::EJSON_KEYS_SECRET} would be pruned.\")\n      raise EjsonPrunableError\n    rescue Kubectl::ResourceNotFoundError => e\n      @logger.debug(\"Secret\/#{EjsonSecretProvisioner::EJSON_KEYS_SECRET} does not exist: #{e}\")\n    end","language":"ruby","code":"def confirm_ejson_keys_not_prunable\n      secret = ejson_provisioner.ejson_keys_secret\n      return unless secret.dig(\"metadata\", \"annotations\", KubernetesResource::LAST_APPLIED_ANNOTATION)\n\n      @logger.error(\"Deploy cannot proceed because protected resource \" \\\n        \"Secret\/#{EjsonSecretProvisioner::EJSON_KEYS_SECRET} would be pruned.\")\n      raise EjsonPrunableError\n    rescue Kubectl::ResourceNotFoundError => e\n      @logger.debug(\"Secret\/#{EjsonSecretProvisioner::EJSON_KEYS_SECRET} does not exist: #{e}\")\n    end","code_tokens":["def","confirm_ejson_keys_not_prunable","secret","=","ejson_provisioner",".","ejson_keys_secret","return","unless","secret",".","dig","(","\"metadata\"",",","\"annotations\"",",","KubernetesResource","::","LAST_APPLIED_ANNOTATION",")","@logger",".","error","(","\"Deploy cannot proceed because protected resource \"","\"Secret\/#{EjsonSecretProvisioner::EJSON_KEYS_SECRET} would be pruned.\"",")","raise","EjsonPrunableError","rescue","Kubectl","::","ResourceNotFoundError","=>","e","@logger",".","debug","(","\"Secret\/#{EjsonSecretProvisioner::EJSON_KEYS_SECRET} does not exist: #{e}\"",")","end"],"docstring":"make sure to never prune the ejson-keys secret","docstring_tokens":["make","sure","to","never","prune","the","ejson","-","keys","secret"],"sha":"ab599ee9a4c1268d5a538a622a83160223fd916c","url":"https:\/\/github.com\/Shopify\/kubernetes-deploy\/blob\/ab599ee9a4c1268d5a538a622a83160223fd916c\/lib\/kubernetes-deploy\/deploy_task.rb#L570-L579"}
]